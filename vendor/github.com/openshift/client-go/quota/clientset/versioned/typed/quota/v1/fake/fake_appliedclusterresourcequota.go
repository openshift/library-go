// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1 "github.com/openshift/api/quota/v1"
	quotav1 "github.com/openshift/client-go/quota/clientset/versioned/typed/quota/v1"
	gentype "k8s.io/client-go/gentype"
)

// fakeAppliedClusterResourceQuotas implements AppliedClusterResourceQuotaInterface
type fakeAppliedClusterResourceQuotas struct {
	*gentype.FakeClientWithList[*v1.AppliedClusterResourceQuota, *v1.AppliedClusterResourceQuotaList]
	Fake *FakeQuotaV1
}

func newFakeAppliedClusterResourceQuotas(fake *FakeQuotaV1, namespace string) quotav1.AppliedClusterResourceQuotaInterface {
	return &fakeAppliedClusterResourceQuotas{
		gentype.NewFakeClientWithList[*v1.AppliedClusterResourceQuota, *v1.AppliedClusterResourceQuotaList](
			fake.Fake,
			namespace,
			v1.SchemeGroupVersion.WithResource("appliedclusterresourcequotas"),
			v1.SchemeGroupVersion.WithKind("AppliedClusterResourceQuota"),
			func() *v1.AppliedClusterResourceQuota { return &v1.AppliedClusterResourceQuota{} },
			func() *v1.AppliedClusterResourceQuotaList { return &v1.AppliedClusterResourceQuotaList{} },
			func(dst, src *v1.AppliedClusterResourceQuotaList) { dst.ListMeta = src.ListMeta },
			func(list *v1.AppliedClusterResourceQuotaList) []*v1.AppliedClusterResourceQuota {
				return gentype.ToPointerSlice(list.Items)
			},
			func(list *v1.AppliedClusterResourceQuotaList, items []*v1.AppliedClusterResourceQuota) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
